{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Tiny",
  "fileTypes": ["ty"],
  "scopeName": "source.ty",
  "patterns": [
    {
      "include": "#constants"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.tiny",
          "match": "\\b(if|while|for|return)\\b"
        },
        {
          "comment": "math operators",
          "name": "keyword.operator.math.tiny",
          "match": "(([+%]|(\\*(?!\\w)))(?!=))|(-(?!>))|(/(?!/))"
        },
        {
          "comment": "fn",
          "name": "keyword.other.fn.tiny",
          "match": "\\bfn\\b"
        },
        {
          "comment": "single equal",
          "name": "keyword.operator.assignment.equal.tiny",
          "match": "(?<![<>])=(?!=|>)"
        },
        {
          "comment": "storage keywords",
          "name": "keyword.other.tiny storage.type.tiny",
          "match": "\\b(let)\\b"
        },
        {
          "comment": "hashrocket, fat arrow",
          "name": "keyword.operator.arrow.fat.tiny",
          "match": "=>"
        },
        {
          "comment": "pub",
          "name": "keyword.other.pub.tiny",
          "match": "\\bpub\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "comment": "decimal integers and floats",
          "name": "constant.numeric.decimal.tiny",
          "match": "\\b\\d[\\d_]*(\\.?)[\\d_]*\\b",
          "captures": {
            "1": {
              "name": "punctuation.separator.dot.decimal.tiny"
            }
          }
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "comment": "function definition",
          "name": "meta.function.definition.tiny",
          "match": "\\b(fn)\\s+([A-Za-z0-9_]+)\\s*(.*)\\s*(=>)",
          "captures": {
            "1": {
              "name": "keyword.other.fn.tiny"
            },
            "2": {
              "name": "entity.name.function.tiny"
            },
            "3": {
              "patterns": [
                {
                  "match": "\\b([A-Za-z0-9_]+)\\b",
                  "captures": {
                    "1": {
                      "name": "variable.parameter.tiny"
                    }
                  }
                }
              ]
            },
            "4": {
              "name": "keyword.operator.arrow.fat.tiny"
            }
          }
        },
        {
          "comment": "function calls",
          "name": "meta.function.call.tiny",
          "begin": "([A-Za-z0-9_]+)(\\()",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.tiny"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.brackets.round.tiny"
            }
          },
          "patterns": [
            { "include": "#constants" },
            { "include": "#keywords" },
            { "include": "#variables" }
          ]
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "comment": "variables",
          "name": "variable.other.tiny",
          "match": "\\b(?<!(?<!\\.)\\.)[a-z0-9_]+\\b"
        }
      ]
    }
  }
}
